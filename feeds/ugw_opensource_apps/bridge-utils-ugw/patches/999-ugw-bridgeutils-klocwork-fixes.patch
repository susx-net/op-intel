--- a/libbridge/libbridge_devif.c
+++ b/libbridge/libbridge_devif.c
@@ -24,6 +24,7 @@
 #include <string.h>
 #include <dirent.h>
 #include <fcntl.h>
+#include <limits.h>
 
 #include "libbridge.h"
 #include "libbridge_private.h"
@@ -31,9 +32,16 @@
 static FILE *fpopen(const char *dir, const char *name)
 {
 	char path[SYSFS_PATH_MAX];
-
-	snprintf(path, SYSFS_PATH_MAX, "%s/%s", dir, name);
-	return fopen(path, "r");
+	if (!name || !dir) {
+		fprintf(stderr, "input is null\n");
+		return NULL;
+	} else {
+		int ret_val = snprintf(path, SYSFS_PATH_MAX, "%s/%s", dir, name);
+		if ((ret_val >= SYSFS_PATH_MAX) || ret_val == -1) {
+			return NULL;
+		}
+		return fopen(path, "r");
+	}
 }
 
 static void fetch_id(const char *dev, const char *name, struct bridge_id *id)
@@ -69,7 +77,9 @@ static int fetch_int(const char *dev, co
 static void fetch_tv(const char *dev, const char *name, 
 		    struct timeval *tv)
 {
-	__jiffies_to_tv(tv, fetch_int(dev, name));
+	int fetch_tv_val = fetch_int(dev, name);
+	if (fetch_tv_val >= 0 && fetch_tv_val <= INT_MAX)
+		__jiffies_to_tv(tv, fetch_tv_val);
 }
 
 /*
@@ -91,7 +101,9 @@ static int get_portno(const char *brname
 		goto error;
 
 	memset(ifindices, 0, sizeof(ifindices));
-	strncpy(ifr.ifr_name, brname, IFNAMSIZ);
+	strncpy(ifr.ifr_name, brname, sizeof(ifr.ifr_name)-1);
+	ifr.ifr_name[IFNAMSIZ-1]='\0';
+
 	ifr.ifr_data = (char *) &args;
 
 	if (ioctl(br_socket_fd, SIOCDEVPRIVATE, &ifr) < 0) {
@@ -119,7 +131,8 @@ static int old_get_bridge_info(const cha
 				  (unsigned long) &i, 0, 0 };
 
 	memset(info, 0, sizeof(*info));
-	strncpy(ifr.ifr_name, bridge, IFNAMSIZ);
+	strncpy(ifr.ifr_name, bridge, sizeof(ifr.ifr_name)-1);
+	ifr.ifr_name[IFNAMSIZ-1]='\0';
 	ifr.ifr_data = (char *) &args;
 
 	if (ioctl(br_socket_fd, SIOCDEVPRIVATE, &ifr) < 0) {
@@ -159,8 +172,14 @@ int br_get_bridge_info(const char *bridg
 {
 	DIR *dir;
 	char path[SYSFS_PATH_MAX];
-
-	snprintf(path, SYSFS_PATH_MAX, SYSFS_CLASS_NET "%s/bridge", bridge);
+	if(!bridge) {
+		dprintf("bridge is null");
+		return -1;
+	} else {
+		int ret_val=snprintf(path, SYSFS_PATH_MAX, SYSFS_CLASS_NET "%s/bridge", bridge);
+		if ((ret_val >= SYSFS_PATH_MAX) || ret_val == -1)
+			return -1;
+	}
 	dir = opendir(path);
 	if (dir == NULL) {
 		dprintf("path '%s' is not a directory\n", path);
@@ -213,7 +232,8 @@ static int old_get_port_info(const char
 		unsigned long args[4] = { BRCTL_GET_PORT_INFO,
 					   (unsigned long) &i, index, 0 };
 	
-		strncpy(ifr.ifr_name, brname, IFNAMSIZ);
+		strncpy(ifr.ifr_name, brname, sizeof(ifr.ifr_name)-1);
+		ifr.ifr_name[IFNAMSIZ-1]='\0';
 		ifr.ifr_data = (char *) &args;
 		
 		if (ioctl(br_socket_fd, SIOCDEVPRIVATE, &ifr) < 0) {
@@ -250,8 +270,14 @@ int br_get_port_info(const char *brname,
 {
 	DIR *d;
 	char path[SYSFS_PATH_MAX];
-
-	snprintf(path, SYSFS_PATH_MAX, SYSFS_CLASS_NET "%s/brport", port);
+	if (!port) {
+		fprintf(stderr, "input is null\n");
+		return -1;
+	} else {
+		int ret_val = snprintf(path, SYSFS_PATH_MAX, SYSFS_CLASS_NET "%s/brport", port);
+		if ((ret_val >= SYSFS_PATH_MAX) || ret_val == -1)
+			return -1;
+	}
 	d = opendir(path);
 	if (!d)
 		goto fallback;
@@ -290,8 +316,14 @@ static int set_sysfs(const char *path, u
 		return -1;
 
 	cc = snprintf(buf, sizeof(buf), "%lu\n", value);
-	if (write(fd, buf, cc) < 0)
-		ret = -1;
+	if ((cc >= 0) && (cc < sizeof(buf))) {
+		if (write(fd, buf, cc) < 0)
+			ret = -1;
+	 } else {
+		if (write(fd, buf, sizeof(buf)) < 0)
+			ret = -1;
+	}
+
 	close(fd);
 
 	return ret;
@@ -303,16 +335,23 @@ static int br_set(const char *bridge, co
 {
 	int ret;
 	char path[SYSFS_PATH_MAX];
-
-	snprintf(path, SYSFS_PATH_MAX, SYSFS_CLASS_NET "%s/bridge/%s",
-		 bridge, name);
+	if (!bridge || !name) {
+		fprintf(stderr, "input is null\n");
+		return -1;
+	} else {
+		int ret_val = snprintf(path, SYSFS_PATH_MAX,
+				SYSFS_CLASS_NET "%s/bridge/%s", bridge, name);
+		if ((ret_val >= SYSFS_PATH_MAX) || ret_val == -1)
+			return -1;
+	}
 
 	if ((ret = set_sysfs(path, value)) < 0) {
 		/* fallback to old ioctl */
 		struct ifreq ifr;
 		unsigned long args[4] = { oldcode, value, 0, 0 };
 
-		strncpy(ifr.ifr_name, bridge, IFNAMSIZ);
+		strncpy(ifr.ifr_name, bridge, sizeof(ifr.ifr_name)-1);
+		ifr.ifr_name[IFNAMSIZ-1]='\0';
 		ifr.ifr_data = (char *) &args;
 		ret = ioctl(br_socket_fd, SIOCDEVPRIVATE, &ifr);
 	}
@@ -362,7 +401,15 @@ static int port_set(const char *bridge,
 	int ret;
 	char path[SYSFS_PATH_MAX];
 
-	snprintf(path, SYSFS_PATH_MAX, SYSFS_CLASS_NET "%s/brport/%s", ifname, name);
+	if (!ifname || !name) {
+		return -1;
+	} else {
+		int ret_val = snprintf(path, SYSFS_PATH_MAX,
+						SYSFS_CLASS_NET "%s/brport/%s", ifname, name);
+		if ((ret_val >= SYSFS_PATH_MAX) || ret_val == -1)
+			return -1;
+	}
+
 
 	if ((ret = set_sysfs(path, value)) < 0) {
 		int index = get_portno(bridge, ifname);
@@ -373,7 +420,8 @@ static int port_set(const char *bridge,
 			struct ifreq ifr;
 			unsigned long args[4] = { oldcode, index, value, 0 };
 			
-			strncpy(ifr.ifr_name, bridge, IFNAMSIZ);
+			strncpy(ifr.ifr_name, bridge, sizeof(ifr.ifr_name)-1);
+			ifr.ifr_name[IFNAMSIZ-1]='\0';
 			ifr.ifr_data = (char *) &args;
 			ret = ioctl(br_socket_fd, SIOCDEVPRIVATE, &ifr);
 		}
@@ -415,7 +463,15 @@ int br_read_fdb(const char *bridge, stru
 	char path[SYSFS_PATH_MAX];
 	
 	/* open /sys/class/net/brXXX/brforward */
-	snprintf(path, SYSFS_PATH_MAX, SYSFS_CLASS_NET "%s/brforward", bridge);
+	if (!bridge) {
+		fprintf(stderr, "input is null\n");
+		return -1;
+	} else {
+		int ret_val = snprintf(path, SYSFS_PATH_MAX,
+					SYSFS_CLASS_NET "%s/brforward", bridge);
+		if ((ret_val >= SYSFS_PATH_MAX) || ret_val == -1)
+			return -1;
+	}
 	f = fopen(path, "r");
 	if (f) {
 		fseek(f, offset*sizeof(struct __fdb_entry), SEEK_SET);
@@ -429,7 +485,8 @@ int br_read_fdb(const char *bridge, stru
 		struct ifreq ifr;
 		int retries = 0;
 
-		strncpy(ifr.ifr_name, bridge, IFNAMSIZ);
+		strncpy(ifr.ifr_name, bridge, sizeof(ifr.ifr_name)-1);
+		ifr.ifr_name[IFNAMSIZ-1]='\0';
 		ifr.ifr_data = (char *) args;
 
 	retry:
--- a/libbridge/libbridge_if.c
+++ b/libbridge/libbridge_if.c
@@ -40,7 +40,8 @@ int br_add_bridge(const char *brname)
 		unsigned long arg[3] 
 			= { BRCTL_ADD_BRIDGE, (unsigned long) _br };
 
-		strncpy(_br, brname, IFNAMSIZ);
+		strncpy(_br, brname, sizeof(_br)-1);
+		_br[IFNAMSIZ-1]='\0';
 		ret = ioctl(br_socket_fd, SIOCSIFBR, arg);
 	} 
 
@@ -60,7 +61,8 @@ int br_del_bridge(const char *brname)
 		unsigned long arg[3] 
 			= { BRCTL_DEL_BRIDGE, (unsigned long) _br };
 
-		strncpy(_br, brname, IFNAMSIZ);
+		strncpy(_br, brname, sizeof(_br)-1);
+		_br[IFNAMSIZ-1]='\0';
 		ret = ioctl(br_socket_fd, SIOCSIFBR, arg);
 	} 
 	return  ret < 0 ? errno : 0;
@@ -75,7 +77,8 @@ int br_add_interface(const char *bridge,
 	if (ifindex == 0) 
 		return ENODEV;
 	
-	strncpy(ifr.ifr_name, bridge, IFNAMSIZ);
+	strncpy(ifr.ifr_name, bridge, sizeof(ifr.ifr_name)-1);
+	ifr.ifr_name[IFNAMSIZ-1]='\0';
 #ifdef SIOCBRADDIF
 	ifr.ifr_ifindex = ifindex;
 	err = ioctl(br_socket_fd, SIOCBRADDIF, &ifr);
@@ -100,7 +103,8 @@ int br_del_interface(const char *bridge,
 	if (ifindex == 0) 
 		return ENODEV;
 	
-	strncpy(ifr.ifr_name, bridge, IFNAMSIZ);
+	strncpy(ifr.ifr_name, bridge, sizeof(ifr.ifr_name)-1);
+	ifr.ifr_name[IFNAMSIZ-1]='\0';
 #ifdef SIOCBRDELIF
 	ifr.ifr_ifindex = ifindex;
 	err = ioctl(br_socket_fd, SIOCBRDELIF, &ifr);
--- a/libbridge/libbridge_init.c
+++ b/libbridge/libbridge_init.c
@@ -47,7 +47,7 @@ void br_shutdown(void)
 static int isbridge(const struct dirent *entry)
 {
 	char path[SYSFS_PATH_MAX];
-	struct stat st;
+	struct stat st = {0};
 	int ret, saved_errno;
 
 	if (entry->d_name[0] == '.'
@@ -56,8 +56,10 @@ static int isbridge(const struct dirent
 		    && entry->d_name[2] == '\0')))
 		return 0;
 
-	snprintf(path, SYSFS_PATH_MAX, 
-		 SYSFS_CLASS_NET "%s/bridge", entry->d_name);
+	int ret_val = snprintf(path, SYSFS_PATH_MAX,
+				SYSFS_CLASS_NET "%s/bridge", entry->d_name);
+	if ((ret_val >= SYSFS_PATH_MAX) || ret_val == -1)
+		return -1;
 
 	/* Workaround old glibc breakage.
 	   If errno is set, then it fails scandir! */
@@ -161,7 +163,8 @@ static int old_foreach_port(const char *
 				  (unsigned long)ifindices, MAX_PORTS, 0 };
 
 	memset(ifindices, 0, sizeof(ifindices));
-	strncpy(ifr.ifr_name, brname, IFNAMSIZ);
+	strncpy(ifr.ifr_name, brname, sizeof(ifr.ifr_name)-1);
+	ifr.ifr_name[IFNAMSIZ-1]='\0';
 	ifr.ifr_data = (char *) &args;
 
 	err = ioctl(br_socket_fd, SIOCDEVPRIVATE, &ifr);
@@ -200,8 +203,15 @@ int br_foreach_port(const char *brname,
 	int i, count;
 	struct dirent **namelist;
 	char path[SYSFS_PATH_MAX];
+	if (!brname) {
+		dprintf("brname is null\n");
+		return -1;
+	} else {
+		int ret_val=snprintf(path, SYSFS_PATH_MAX, SYSFS_CLASS_NET "%s/brif", brname);
+		if (ret_val >= SYSFS_PATH_MAX || ret_val == -1)
+			return -1;
+	}
 
-	snprintf(path, SYSFS_PATH_MAX, SYSFS_CLASS_NET "%s/brif", brname);
 	count = scandir(path, &namelist, 0, alphasort);
 	if (count < 0)
 		return old_foreach_port(brname, iterator, arg);
@@ -232,7 +242,16 @@ const char *portno_to_iface(int port_no,
 	struct port_info pinfo;
 
 	bzero(ifname, IFNAMSIZ);
-	snprintf(path, SYSFS_PATH_MAX, SYSFS_CLASS_NET "%s/brif", brname);
+	if (!brname) {
+		dprintf("brname is null\n");
+		return -1;
+	} else {
+		int ret_val = snprintf(path, SYSFS_PATH_MAX,
+					SYSFS_CLASS_NET "%s/brif", brname);
+		if ((ret_val >= SYSFS_PATH_MAX) || ret_val == -1)
+			return -1;
+	}
+
 	count = scandir(path, &namelist, 0, alphasort);
 	if (count >= 0) {
 		for (i = 0; i < count; i++) {
--- a/brctl/brctl_cmd.c
+++ b/brctl/brctl_cmd.c
@@ -22,17 +22,25 @@
 #include <sys/time.h>
 #include <errno.h>
 #include <asm/param.h>
+#include <limits.h>
 #include "libbridge.h"
 #include "brctl.h"
 
 static int strtotimeval(struct timeval *tv, const char *time)
 {
 	double secs;
+	if (time == NULL) {
+		fprintf(stderr, "strtotimeval cant be performed");
+		return -1;
+	}
 	if (sscanf(time, "%lf", &secs) != 1) 
 		return -1;
-	tv->tv_sec = secs;
-	tv->tv_usec = 1000000 * (secs - tv->tv_sec);
-	return 0;
+	if (secs >= 0 && secs < LLONG_MAX) {
+		tv->tv_sec = secs;
+		tv->tv_usec = 1000000 * (secs - tv->tv_sec);
+		return 0;
+	} else
+		return -1;
 }
 
 static int br_cmd_addbr(int argc, char*const* argv)
@@ -181,7 +189,10 @@ static int br_cmd_setbridgeprio(int argc
 {
 	int prio;
 	int err;
-
+	if (argv[2] == NULL) {
+		fprintf(stderr,"set bridge priority not possible\n");
+		return 1;
+	}
 	if (sscanf(argv[2], "%i", &prio) != 1) {
 		fprintf(stderr,"bad priority\n");
 		return 1;
@@ -250,6 +261,10 @@ static int br_cmd_setmaxage(int argc, ch
 static int br_cmd_setpathcost(int argc, char *const* argv)
 {
 	int cost, err;
+	if (argv[3] == NULL) {
+		fprintf(stderr, "set pathcost not possible\n");
+		return 1;
+	}
 
 	if (sscanf(argv[3], "%i", &cost) != 1) {
 		fprintf(stderr, "bad path cost value\n");
@@ -267,6 +282,10 @@ static int br_cmd_setportprio(int argc,
 {
 	int cost, err;
 
+	if (argv[3] == NULL) {
+		fprintf(stderr, "set portprio not possible\n");
+		return 1;
+	}
 	if (sscanf(argv[3], "%i", &cost) != 1) {
 		fprintf(stderr, "bad path priority value\n");
 		return 1;
